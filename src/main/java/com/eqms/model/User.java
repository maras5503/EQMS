package com.eqms.model;
// default package
// Generated 2015-11-14 00:29:40 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "exam_questions_5", uniqueConstraints = @UniqueConstraint(columnNames = "E_MAIL") )
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer userId;
	private UserRole userRoles;
	private String firstname;
	private String lastname;
	private String email;
	private String password;
	private boolean enabled;
	private Integer conductedExamId;
	private Set<Subject> subjectses = new HashSet<Subject>(0);
	private Set<VerificationToken> verificationTokenses = new HashSet<VerificationToken>(0);

	public User() {
	}

	public User(UserRole userRoles, String firstname, String lastname, String email, String password,
			boolean enabled) {
		this.userRoles = userRoles;
		this.firstname = firstname;
		this.lastname = lastname;
		this.email = email;
		this.password = password;
		this.enabled = enabled;
	}

	public User(UserRole userRoles, String firstname, String lastname, String email, String password, boolean enabled,
			Set<Subject> subjectses, Set<VerificationToken> verificationTokenses) {
		this.userRoles = userRoles;
		this.firstname = firstname;
		this.lastname = lastname;
		this.email = email;
		this.password = password;
		this.enabled = enabled;
		this.subjectses = subjectses;
		this.verificationTokenses = verificationTokenses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "USER_ID", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROLE_ID", nullable = false)
	public UserRole getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(UserRole userRoles) {
		this.userRoles = userRoles;
	}

	@Column(name = "FIRSTNAME", nullable = false, length = 20)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "LASTNAME", nullable = false, length = 30)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "E_MAIL", unique = true, nullable = false, length = 70)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PASSWORD", nullable = false, length = 40)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "ENABLED", nullable = false)
	public boolean isEnabled() {
		return this.enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	@Column(name = "CONDUCTED_EXAM_ID", nullable = true)
	public Integer getConductedExamId(){ return this.conductedExamId;}

	public void setConductedExamId(Integer conductedExamId){ this.conductedExamId=conductedExamId;}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "users_subjects", catalog = "exam_questions_4", joinColumns = {
			@JoinColumn(name = "USER_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "SUBJECT_ID", nullable = false, updatable = false) })
	public Set<Subject> getSubjectses() {
		return this.subjectses;
	}

	public void setSubjectses(Set<Subject> subjectses) {
		this.subjectses = subjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<VerificationToken> getVerificationTokenses() {
		return this.verificationTokenses;
	}

	public void setVerificationTokenses(Set<VerificationToken> verificationTokenses) {
		this.verificationTokenses = verificationTokenses;
	}

}
