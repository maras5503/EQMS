package com.eqms.model;
// default package
// Generated 2015-11-14 00:29:40 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * GroupsOfQuestions generated by hbm2java
 */
@Entity
@Table(name = "groups_of_questions", catalog = "exam_questions_5")
public class GroupOfQuestions implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer groupId;
	private Test tests;
	private String groupName;
	private int numberOfQuestions;
	private Set<Question> questionses = new HashSet<Question>(0);

	public GroupOfQuestions() {
	}

	public GroupOfQuestions(Test tests, String groupName, int numberOfQuestions) {
		this.tests = tests;
		this.groupName = groupName;
		this.numberOfQuestions = numberOfQuestions;
	}

	public GroupOfQuestions(Test tests, String groupName, int numberOfQuestions, Set<Question> questionses) {
		this.tests = tests;
		this.groupName = groupName;
		this.numberOfQuestions = numberOfQuestions;
		this.questionses = questionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "GROUP_ID", unique = true, nullable = false)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TEST_ID", nullable = false)
	public Test getTests() {
		return this.tests;
	}

	public void setTests(Test tests) {
		this.tests = tests;
	}

	@Column(name = "GROUP_NAME", nullable = false, length = 200)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "NUMBER_OF_QUESTIONS", nullable = false)
	public int getNumberOfQuestions() {
		return this.numberOfQuestions;
	}

	public void setNumberOfQuestions(int numberOfQuestions) {
		this.numberOfQuestions = numberOfQuestions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "groups_questions", catalog = "exam_questions_5", joinColumns = {
			@JoinColumn(name = "GROUP_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "QUESTION_ID", nullable = false, updatable = false) })
	public Set<Question> getQuestionses() {
		return this.questionses;
	}

	public void setQuestionses(Set<Question> questionses) {
		this.questionses = questionses;
	}

}
