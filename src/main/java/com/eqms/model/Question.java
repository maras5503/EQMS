package com.eqms.model;
// default package
// Generated 2015-11-14 00:29:40 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Questions generated by hbm2java
 */
@Entity
@Table(name = "questions", catalog = "exam_questions_5")
public class Question implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer questionId;
	private Picture pictures;
	private String contentOfQuestion;
	private int numberOfAnswers;
	private int numberOfCorrectAnswers;
	private Set<GroupOfQuestions> groupsOfQuestionses = new HashSet<GroupOfQuestions>(0);
	private Set<Answer> answerses = new HashSet<Answer>(0);

	public Question() {
	}

	public Question(String contentOfQuestion, int numberOfAnswers, int numberOfCorrectAnswers) {
		this.contentOfQuestion = contentOfQuestion;
		this.numberOfAnswers = numberOfAnswers;
		this.numberOfCorrectAnswers = numberOfCorrectAnswers;
	}

	public Question(Picture pictures, String contentOfQuestion, int numberOfAnswers, int numberOfCorrectAnswers,
			Set<GroupOfQuestions> groupsOfQuestionses, Set<Answer> answerses) {
		this.pictures = pictures;
		this.contentOfQuestion = contentOfQuestion;
		this.numberOfAnswers = numberOfAnswers;
		this.numberOfCorrectAnswers = numberOfCorrectAnswers;
		this.groupsOfQuestionses = groupsOfQuestionses;
		this.answerses = answerses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "QUESTION_ID", unique = true, nullable = false)
	public Integer getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PICTURE_ID")
	public Picture getPictures() {
		return this.pictures;
	}

	public void setPictures(Picture pictures) {
		this.pictures = pictures;
	}

	@Column(name = "CONTENT_OF_QUESTION", nullable = false, length = 2000)
	public String getContentOfQuestion() {
		return this.contentOfQuestion;
	}

	public void setContentOfQuestion(String contentOfQuestion) {
		this.contentOfQuestion = contentOfQuestion;
	}

	@Column(name = "NUMBER_OF_ANSWERS", nullable = false)
	public int getNumberOfAnswers() {
		return this.numberOfAnswers;
	}

	public void setNumberOfAnswers(int numberOfAnswers) {
		this.numberOfAnswers = numberOfAnswers;
	}

	@Column(name = "NUMBER_OF_CORRECT_ANSWERS", nullable = false)
	public int getNumberOfCorrectAnswers() {
		return this.numberOfCorrectAnswers;
	}

	public void setNumberOfCorrectAnswers(int numberOfCorrectAnswers) {
		this.numberOfCorrectAnswers = numberOfCorrectAnswers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "questionses")
	public Set<GroupOfQuestions> getGroupsOfQuestionses() {
		return this.groupsOfQuestionses;
	}

	public void setGroupsOfQuestionses(Set<GroupOfQuestions> groupsOfQuestionses) {
		this.groupsOfQuestionses = groupsOfQuestionses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "questions_answers", catalog = "exam_questions_5", joinColumns = {
			@JoinColumn(name = "QUESTION_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ANSWER_ID", nullable = false, updatable = false) })
	public Set<Answer> getAnswerses() {
		return this.answerses;
	}

	public void setAnswerses(Set<Answer> answerses) {
		this.answerses = answerses;
	}

}
