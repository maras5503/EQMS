package com.eqms.model;
// default package
// Generated 2015-11-14 00:29:40 by Hibernate Tools 4.3.1.Final

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Answers generated by hbm2java
 */
@Entity
@Table(name = "answers", catalog = "exam_questions_5")
public class Answer implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer answerId;
	private Picture pictures;
	private String contentOfAnswer;
	private boolean whetherCorrect;
	private Set<Question> questionses = new HashSet<Question>(0);

	public Answer() {
	}

	public Answer(String contentOfAnswer, boolean whetherCorrect) {
		this.contentOfAnswer = contentOfAnswer;
		this.whetherCorrect = whetherCorrect;
	}

	public Answer(Picture pictures, String contentOfAnswer, boolean whetherCorrect, Set<Question> questionses) {
		this.pictures = pictures;
		this.contentOfAnswer = contentOfAnswer;
		this.whetherCorrect = whetherCorrect;
		this.questionses = questionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ANSWER_ID", unique = true, nullable = false)
	public Integer getAnswerId() {
		return this.answerId;
	}

	public void setAnswerId(Integer answerId) {
		this.answerId = answerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PICTURE_ID")
	public Picture getPictures() {
		return this.pictures;
	}

	public void setPictures(Picture pictures) {
		this.pictures = pictures;
	}

	@Column(name = "CONTENT_OF_ANSWER", nullable = false, length = 2000)
	public String getContentOfAnswer() {
		return this.contentOfAnswer;
	}

	public void setContentOfAnswer(String contentOfAnswer) {
		this.contentOfAnswer = contentOfAnswer;
	}

	@Column(name = "WHETHER_CORRECT", nullable = false)
	public boolean isWhetherCorrect() {
		return this.whetherCorrect;
	}

	public void setWhetherCorrect(boolean whetherCorrect) {
		this.whetherCorrect = whetherCorrect;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "answerses")
	@JsonIgnore
	public Set<Question> getQuestionses() {
		return this.questionses;
	}

	public void setQuestionses(Set<Question> questionses) {
		this.questionses = questionses;
	}

}
