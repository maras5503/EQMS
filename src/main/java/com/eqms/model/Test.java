package com.eqms.model;
// default package
// Generated 2015-11-14 00:29:40 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Tests generated by hbm2java
 */
@Entity
@Table(name = "tests", catalog = "exam_questions_5")
public class Test implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer testId;
	private SetOfRating setsOfRating;
	private Subject subjects;
	private String testName;
	private int timeForTest;
	private int numberOfGroups;
	private int numberOfQuestions;
	private Date creationDate;
	private String createdBy;
	private Date modificationDate;
	private String modifiedBy;
	private Set<GroupOfQuestions> groupsOfQuestionses = new HashSet<GroupOfQuestions>(0);

	public Test() {
	}

	public Test(SetOfRating setsOfRating, Subject subjects, String testName, int timeForTest, int numberOfGroups,
			int numberOfQuestions, Date creationDate, String createdBy) {
		this.setsOfRating = setsOfRating;
		this.subjects = subjects;
		this.testName = testName;
		this.timeForTest = timeForTest;
		this.numberOfGroups = numberOfGroups;
		this.numberOfQuestions = numberOfQuestions;
		this.creationDate = creationDate;
		this.createdBy = createdBy;
	}

	public Test(SetOfRating setsOfRating, Subject subjects, String testName, int timeForTest, int numberOfGroups,
			int numberOfQuestions, Date creationDate, String createdBy, Date modificationDate, String modifiedBy,
			Set<GroupOfQuestions> groupsOfQuestionses) {
		this.setsOfRating = setsOfRating;
		this.subjects = subjects;
		this.testName = testName;
		this.timeForTest = timeForTest;
		this.numberOfGroups = numberOfGroups;
		this.numberOfQuestions = numberOfQuestions;
		this.creationDate = creationDate;
		this.createdBy = createdBy;
		this.modificationDate = modificationDate;
		this.modifiedBy = modifiedBy;
		this.groupsOfQuestionses = groupsOfQuestionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TEST_ID", unique = true, nullable = false)
	public Integer getTestId() {
		return this.testId;
	}

	public void setTestId(Integer testId) {
		this.testId = testId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SET_ID", nullable = false)
	public SetOfRating getSetsOfRating() {
		return this.setsOfRating;
	}

	public void setSetsOfRating(SetOfRating setsOfRating) {
		this.setsOfRating = setsOfRating;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBJECT_ID", nullable = false)
	public Subject getSubjects() {
		return this.subjects;
	}

	public void setSubjects(Subject subjects) {
		this.subjects = subjects;
	}

	@Column(name = "TEST_NAME", nullable = false, length = 200)
	public String getTestName() {
		return this.testName;
	}

	public void setTestName(String testName) {
		this.testName = testName;
	}

	@Column(name = "TIME_FOR_TEST", nullable = false)
	public int getTimeForTest() {
		return this.timeForTest;
	}

	public void setTimeForTest(int timeForTest) {
		this.timeForTest = timeForTest;
	}

	@Column(name = "NUMBER_OF_GROUPS", nullable = false)
	public int getNumberOfGroups() {
		return this.numberOfGroups;
	}

	public void setNumberOfGroups(int numberOfGroups) {
		this.numberOfGroups = numberOfGroups;
	}

	@Column(name = "NUMBER_OF_QUESTIONS", nullable = false)
	public int getNumberOfQuestions() {
		return this.numberOfQuestions;
	}

	public void setNumberOfQuestions(int numberOfQuestions) {
		this.numberOfQuestions = numberOfQuestions;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATION_DATE", nullable = false, length = 10)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 70)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFICATION_DATE", length = 10)
	public Date getModificationDate() {
		return this.modificationDate;
	}

	public void setModificationDate(Date modificationDate) {
		this.modificationDate = modificationDate;
	}

	@Column(name = "MODIFIED_BY", length = 70)
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tests")
	public Set<GroupOfQuestions> getGroupsOfQuestionses() {
		return this.groupsOfQuestionses;
	}

	public void setGroupsOfQuestionses(Set<GroupOfQuestions> groupsOfQuestionses) {
		this.groupsOfQuestionses = groupsOfQuestionses;
	}

}
